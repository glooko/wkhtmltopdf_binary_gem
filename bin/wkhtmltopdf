#!/usr/bin/env ruby

###
# wkhtmltopdf_binary_gem Copyright 2013 The University of Iowa
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0

require 'rbconfig'
require 'securerandom'
require 'fileutils'
require 'logger'

def log_duration(type = :info, log_name)
  log = Logger.new(STDERR)
  log.public_send(type, "#{log_name} start: "\
                                   "#{start_time = Time.now}")

  yield
ensure
  log.public_send(type, "#{log_name} end: "\
                                   "#{end_time = Time.now}")
  log.public_send(type, "#{log_name} "\
                                   "total time: #{end_time - start_time} s")
end

suffix =
  case RbConfig::CONFIG['host_os']
  when /linux/
    case RbConfig::CONFIG['host_cpu'] 
    when 'x86_64'
      'debian_11_amd64'
    when 'aarch64'
      'debian_11_arm64'
    else
      'debian_11_i386'
    end
  when /darwin/
    'darwin_x86'
  else
    raise 'Invalid platform. Must be running on linux or intel-based Mac OS.'
  end

binary = "#{__FILE__}_#{suffix}"

raise 'chromium binary not found.' unless system('which chromium')

time = Time.now.in_time_zone("Europe/Zagreb").strftime("%Y_%m_%d_%H_%M_%S")

# ENV['PWD'] is path to kings-landing
temp_path = "#{ENV['PWD']}/pdf"
# create ENV['PWD']/tmp/pdf if it doesn't exist
FileUtils.mkdir_p temp_path

html_path = "#{temp_path}/#{time}_html.html"
File.open(html_path, 'wb') do |f|
  f.write "\uFEFF"
  f.write STDIN.read
end

output_path = "#{temp_path}/#{time}_output.html"

success = log_duration('info', "PDF: chromium execution") do
  system "chromium --headless --disable-gpu --dump-dom #{html_path} > #{output_path}"
end

raise "chromium failed to generate html with '#{time}' time." unless success

cmd = $*.unshift(binary)
cmd = cmd.insert(-3, "--enable-local-file-access")
cmd[-2] = output_path

success = log_duration('info', "PDF: wkhtmltopdf execution") do
  system *cmd
end

raise "wkhtmltopdf binary failed to generate pdf from #{output_path}." unless success

# clean up temporary files
# File.delete html_path if File.exist? html_path
# File.delete output_path if File.exist? output_path
